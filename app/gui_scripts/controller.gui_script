local LOAD_SCENE = hash("load_scene")
local PAUSE = hash("pause")

local UP = 270
local DOWN = -UP
local CENTER = 0
local LEFT = -540

local TRANSPARENT = vmath.vector4(1, 1, 1, 0)
local WHITE = vmath.vector4(1)

local function show(self, scene, level) 
	if self.current_proxy then 
		msg.post("/proxies#"..self.current_proxy, "unload") 
	end
	msg.post("/proxies#"..scene, "async_load") 
	self.current_proxy = scene
end

function init(self)
	--seed the random
	math.randomseed(socket.gettime()* 10000)
	math.random();math.random();math.random()

	show(self, "main")

	--set bg color to white
	msg.post("@render:", "clear_color", {color = vmath.vector4(243/255, 244/255, 248/255, 255/255)})
	msg.post("/proxies", "acquire_input_focus")

	-- show cursor
	--defos.set_fullscreen(true)
	--defos.set_cursor_visible(true)
end

function final(self)

end

function update(self, dt)

end

function on_message(self, message_id, message, sender)
	if message_id == LOAD_SCENE then
		show(self, message.scene, message.level)
	elseif message_id == hash("proxy_loaded") then 
		msg.post(sender, "enable") 
	elseif message_id == hash("proxy_unloaded") then
	elseif message_id == PAUSE then
		if message.pause then
			msg.post("/proxies#main", "set_time_step", {factor = 0, mode = 1})
		else
			msg.post("/proxies#main", "set_time_step", {factor = 1, mode = 1})
		end
	end
end

function on_input(self, action_id, action)

end